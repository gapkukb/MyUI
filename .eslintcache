[{"C:\\workspace\\ui\\src\\index.tsx":"1","C:\\workspace\\ui\\src\\reportWebVitals.ts":"2","C:\\workspace\\ui\\src\\App.tsx":"3","C:\\workspace\\ui\\src\\util\\naming-style.ts":"4","C:\\workspace\\ui\\src\\util\\regexp.ts":"5","C:\\workspace\\ui\\src\\util\\index.ts":"6","C:\\workspace\\ui\\src\\util\\type.ts":"7","C:\\workspace\\ui\\src\\util\\performance.ts":"8","C:\\workspace\\ui\\src\\package\\button\\index.tsx":"9","C:\\workspace\\ui\\src\\util\\bem.ts":"10"},{"size":517,"mtime":1612288415837,"results":"11","hashOfConfig":"12"},{"size":440,"mtime":1612288415846,"results":"13","hashOfConfig":"12"},{"size":493,"mtime":1612443947345,"results":"14","hashOfConfig":"12"},{"size":1579,"mtime":1612372751636,"results":"15","hashOfConfig":"12"},{"size":464,"mtime":1612446575901,"results":"16","hashOfConfig":"12"},{"size":1559,"mtime":1612415198300,"results":"17","hashOfConfig":"12"},{"size":1794,"mtime":1612447194357,"results":"18","hashOfConfig":"12"},{"size":1743,"mtime":1612428069746,"results":"19","hashOfConfig":"12"},{"size":1635,"mtime":1612447438683,"results":"20","hashOfConfig":"12"},{"size":818,"mtime":1612447390839,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"gsctrs",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\workspace\\ui\\src\\index.tsx",[],["45","46"],"C:\\workspace\\ui\\src\\reportWebVitals.ts",[],"C:\\workspace\\ui\\src\\App.tsx",[],"C:\\workspace\\ui\\src\\util\\naming-style.ts",[],"C:\\workspace\\ui\\src\\util\\regexp.ts",[],"C:\\workspace\\ui\\src\\util\\index.ts",[],["47","48"],"C:\\workspace\\ui\\src\\util\\type.ts",[],"C:\\workspace\\ui\\src\\util\\performance.ts",[],"C:\\workspace\\ui\\src\\package\\button\\index.tsx",["49"],"import { AnchorHTMLAttributes, ButtonHTMLAttributes, CSSProperties, FC, ReactNode } from \"react\";\r\nimport { BEM } from \"../../util/bem\";\r\nconst bem = new BEM(\"button\");\r\nexport type BaseProps = {\r\n  label: string;\r\n  size: \"normal\" | \"large\" | \"small\" | \"mini\";\r\n  nativeType: \"button\" | \"submit\" | \"reset\" | \"image\";\r\n  type: \"primary\" | \"danger\" | \"default\" | \"success\" | \"error\" | \"warning\" | \"link\";\r\n  className: string;\r\n  disabled: boolean;\r\n  readonly: boolean;\r\n  href: string;\r\n  to: string;\r\n  loading: string;\r\n  children: ReactNode;\r\n  style: CSSProperties;\r\n  ghost: boolean;\r\n  icon: string;\r\n  iconRight: string;\r\n  image: string;\r\n};\r\n\r\ntype ButtonProps = BaseProps & Omit<ButtonHTMLAttributes<HTMLElement>, \"type\">;\r\ntype AnchorProps = BaseProps & AnchorHTMLAttributes<HTMLElement>;\r\ntype Props = Partial<ButtonProps & AnchorProps>;\r\n\r\nexport const Button: FC<Props> = (props) => {\r\n  const {\r\n    label,\r\n    size,\r\n    nativeType,\r\n    type,\r\n    className,\r\n    disabled,\r\n    href,\r\n    to,\r\n    loading,\r\n    children,\r\n    style,\r\n    ghost,\r\n    icon,\r\n    iconRight,\r\n    ...rest\r\n  } = props;\r\n  const classes = bem.classes(type, size, disabled && \"disabled\");\r\n  console.log(classes);\r\n\r\n  const Tag = to ? \"link\" : href ? \"a\" : \"button\";\r\n\r\n  return (\r\n    <Tag className={classes} role=\"button\">\r\n      <span className={bem.child(\"text\")}>123213</span>\r\n      {/* <img src=\"https://github.com/logaretm/vee-validate/raw/main/logo.png\" alt=\"this is message\" /> */}\r\n    </Tag>\r\n  );\r\n};\r\nButton.defaultProps = {\r\n  type: \"default\",\r\n  nativeType: \"button\",\r\n  size: \"normal\",\r\n};\r\n\r\nexport default Button;\r\n","C:\\workspace\\ui\\src\\util\\bem.ts",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":43,"column":8,"nodeType":"58","messageId":"59","endLine":43,"endColumn":12},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],["60"],["61"],"@typescript-eslint/no-unused-vars","'rest' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]